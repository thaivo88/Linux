                      Disk Use
df and du programs, which summarize disk use on a partition-by-partition and directory-by-directory basis.                      

                      df

        Monitoring Disk Use by Partition
You can type the command name to see a summary of disk space used on all of the system's partition
      df [options] [files]

Options:      
    Include All Filesystems:
The -a or --all option includes pseudo-filesystems with a size of 0 in the output.
    Use Scaled Units
The -h or --human-readable option causes df to scale and label its units. example 100KiB, 350MiB, 150G
The -H and --si option have a similar effect, but they use power of 10 units rather than power of 2.
The -k (--kilobyets) and -m (--megabytes) options force output in their respective units.
  Summarize Inodes:
Report on available and used inodes by passing the -i or --inodes option.
  Local filesystem only:
The -l or --local option causes 'df' to omit network filesystems.
  Display Filesystem Type:
The -T or --print-type option adds the filesystem type to the information 'df' displays.
  Limit by filesystem type:
The -t [fstype] or --type=fstype option displays only information about filesystems of the specified type.
The -x [fstype] or --exclude-type=fstype option has the opposite effect; it excludes filesystems of the specified type from the report.

                    du
                    
You can use 'du' to find the disk usage
      du [options] [directories]
This command searches directories that you specify and reports how much disk space each is consuming. This search is recursive,
so you can learn how much space the directory and all its subdirectories consume.

Options:
  Summarize file and directories:
Passing the -a or --all option causes 'du' to report on individual files as well.
  Compute a Grand Total:
-c or --total option causes 'du' to add a grand total to the end of its output.
  Use Scaled Units:
-h or --human-readable option causes 'du' to scale and label its units.
-H and --si option have a similar effect, but they use power of 10 units rather than power of 2 units.
-k --kilobytes and -m --megabytes options force output in their respective units.
  Count hard links:
'du' counts files that appear multiple times as hard links only once.
-l or --count-links option counts hard links aswell
  Limit Depth:
--max-depth=n option limits the report on n level. The subdirectories' contents are counted even if they aren't reported.
  Summarize:
If you don't want a line of output for each subdirectory in the tree, pass the -s or --summarize option.
This option is equivalent to --max=depth=0
  Limit to one filesystem:
-x or --one-file-system option limits the report to the current filesystem.



                    Mount
      mount [-alrsvw] [-t fstype] [-o options] [device] [mountpoint]

Features:
  Mount all filesystems:
The -a parameter causes mount to mount all of the filesystems listed in the /etc/fstab file.  
  Mount read-only:
The -r parameter causes Linux to mount the filesystem read-only  
  Show verbose output:
The -v produces verbose output the program provides comments on operations as they occur.  
  Mount Read/Write:
The -w parameter causes Linux to attempt to mount the filesystem for both read and write operations.
The -o rw option has the same effect
  Specify the filesystem type:
Use the -t [fstype] parameter to specify the file system type.
  Mount by label or UUID:
Instead of the device name, you can use the -L [label] or -U [UUID] options to tell mount to mount the filesystemm with the specified
label or UUID.
  Additiional Option:
You can add many options using the -o parameter.
  Device:
The device parameter is the device filename associated with the partition or disk device.
  Mount point:
The mountpoint parameter is the directory to which the device's contents should be attached.

Ordinarily, only root may issue a mount command; however, if /etc/fstab specifies the user, users, or owner option, an ordinary user
may mount a filesystem using a simplified syntax in which only the device or mount point is specified.

When Linux mounts a filesystem, it ordinarily records this fact in /etc/mtab. This file has a format similar to that of /etc/fstab
and is stored in /etc, but it's not a configuration file that you should edit.

Option            Supported Filesystems       Description
------------------------------------------------------------------------------------------------------------------------------------
defaults          ALL                         -Causes the default optoins for this file system to be used. It's used primarily in the
                                              /etc/fstab file to ensure that the file includes an options column.
------------------------------------------------------------------------------------------------------------------------------------
loop              ALL                         -Causes the loopback device for this mount to be used. Allows you to mount a file as if it
                                              were a disk partition.
------------------------------------------------------------------------------------------------------------------------------------
auto or noauto    ALL                         -Mounts or doesn't mount the filesystem at boot time or when root issues the 'mount -a'
                                              command. The default is auto, but noauto is appropriate for removeable media. Used /etc/fstab
------------------------------------------------------------------------------------------------------------------------------------
user or nouser    ALL                         -Allows or disallows ordinary users to mount the filesystem. The default is nouser, but
                                              user is often appropriate for removable media. Used in /etc/fstab. When included in this
                                              file, user allows users to type 'mount /[mountpoint]' to mount a disk. Only the user who
                                              mounted the filesystem may unmount it.
------------------------------------------------------------------------------------------------------------------------------------
users             ALL                         -Similar to user, except that any user may unmount a filesystem once it's been mounted.
------------------------------------------------------------------------------------------------------------------------------------
owner             ALL                         -Similar to user, except that the user must own the device file. Some distribution, such
                                              as Red Hat, assign ownership of some device files (such as /dev/fd0 for the floppy disk)
                                              to the console user, so this can be a helpful option.
------------------------------------------------------------------------------------------------------------------------------------
remount           ALL                         -Changes one or more mount options without explicitly unmounting a partition. To use this
                                              option, you issue a mount command on an already-mounted filesystem but with remount along
                                              with any options that you want to change. This feature can be used to enable or disable
                                              write access to a partition.
------------------------------------------------------------------------------------------------------------------------------------
ro                ALL                         -Specifies a read-only mount of the filesystem. This is the default for filesystems that 
                                              include no write access and for some with particularly unreliable write support.
------------------------------------------------------------------------------------------------------------------------------------
rw                All read/write filesystems  -Specifies a read/write mount of the filesystem. This is the default for most read/write filesystem.
------------------------------------------------------------------------------------------------------------------------------------
uid=value         vfat, hpfs, ntfs, hfs       -Set the owner of all files. Example, uid=1000 sets the owner to whomever has Linux 
                                              user ID 1000.
------------------------------------------------------------------------------------------------------------------------------------
gid=value         vfat, hpfs, ntfs, hfs       -Works like uid=value, but sets the group of all files on the filesystem. You can find
                                              group ID in /etc/group file.
------------------------------------------------------------------------------------------------------------------------------------
umask=value       vfat, hpfs, ntfs, hfs       -Sets the umask for the permissions on files. 'value' is interpreted in binary as bits to be
                                              removed from permissions on files. For instance, 'umask=027' yields permissions of 750, or
                                              -rwxr-x---. Used in conjunction with 'uid=value' and 'gid=value' this option lets you control
                                              who can access files on FAT, HPFS, and many other foreign filesystems.
------------------------------------------------------------------------------------------------------------------------------------
dmask=value       vfat, hpfs, ntfs, hfs       -Similar to 'umask', but sets the umask for directories only, not for files.
------------------------------------------------------------------------------------------------------------------------------------
fmask=value       vfat, hpfs, ntfs, hfs       -Similar to 'umask', but sets the umask for files only, not for directories.
------------------------------------------------------------------------------------------------------------------------------------
conv=code         msdos, umsdos,              -If 'code' is 'b' or 'binary', linux doesn't modify the files' contents. If 'code' is 't'
                  vfat, hpfs, hfs             or 'text', linux auto-converts files between linux-style and Window or Macintosh
                                              end-of-line characters. if 'code' is 'a' or 'auto', linux applies the conversion unless 
                                              the file is a known binary file format. It's usually best to leave this at its default
                                              value of binary because file conversions can cause serious problems for some application
                                              and file types.
------------------------------------------------------------------------------------------------------------------------------------
norock            iso9660                     -Disables Rock Ridge extensions for ISO-9660 CD-ROMs
------------------------------------------------------------------------------------------------------------------------------------
nojoliet          iso9660                     -Disables Joliet extensions for ISO-9660 CD-ROMs.
------------------------------------------------------------------------------------------------------------------------------------
  
                       Umount
       umonut [-afnrv] [-t fstype] [device | mountpoint]
  
Features:  
  Unmount All: -a
Rather than unmount the partitions listed in /etc/fstab, the -a option causes the system to attempt to unmount all of the partitions 
listed in /etc/mtab.
  Force Unmount: -f
You can use the -f option to tell Linux to force an unmount operation that might otherwise fail.
  Fall Back to Read-Only: -r
The -r option tells umount that if it can't unmount a filesystem, it should attempt to remount it in read-only mode.
  Unmount Partitions of a Specific filesystem Type: -t [fstype]
The -t fstype option tells the systemm to unmount only partitions of the specified type.
  The Device and Mount Point: 
You need to specify only the device (with 'device') or only the mount point (with 'mountpoint'), not both.

As with mount, normal users can't ordinarily use umount. The exception is if the partition or device is listed in /etc/fstab and
specifies the user, users, or owner option, in which case normal users can unmount the device.



                   Permanently mounting Filesystems

The /etc/fstab file controls how linux provides access to disk partitions and removable media devices.
The /etc/fstab file describes how these filesystems are laid out. (The filename fstab is an abbreviation for filesystem table)
The /etc/fstab file consists of a series of lines that contain six fields each.

Device:  The first column specifies the mount device. These are usually device filenames that reference hard disks, USB drives, and so on.
Most distributions now specify partitions by their labels or UUIDs, as in the LABEL=/home and UUID=364a5sd4854asf65a-as6d454a-a436d54.

Mount Point:  The second column specifies the mount point. This is where the partition or disk will be mounted in the unified linux filesystem.

Filesystem Type:  The filesystem type code is the same as the type code used to mount a filesystem with the mount command. A filesystem
type code of auto lets the kernel auto-detect the filesystem type, which can be a convenient option for removable media devices. Auto-
detection doesn't work with all filesystems, though.

Mount Options:  Most filesystems support several mount options, which modify how the kernel treats the filesystem.

Backup Operation: The next-to-last field contains a 1 if the dump utility should back up a partition or a 0 if it shouldn't.

Filesystem Check Order: At boot time, linux uses the 'fsck' program to check filesystem integrity. A 0 means that 'fsck' should NOT check
a filesystem. Higher numbers represent the check order. The root partition should have a value of 1, and all others that should be checked
should have a value of 2. ReiserFS, shouldn't be automatically checked and so should have a values of 0.

You can set up a credentials opton for mount point. You can use the username=name and password=pass options to smbfs or cifs.
All though this password can be seen.
An alternative to use is credentials=file option, you can use it to point linux at a file that holds the username and password.
This file has labeled lines:
username=[username]
password=[password]
