A file-archiving tool collects a group of files into a single package file, called an archive.
Linux supports sveral archiving commands, the most prominent being 'tar' and 'cpio'

              tar utility
The 'tar' program's name stands for "tape archiver."
A tarball is an archive file created by 'tar' and typically compressed with gzip, xz, or bzip2

                                tar 
                     tar [options] destination/tar_file_name files-to-archive           
                                
Command                     Abbreviation                  Description
---------------------------------------------------------------------------------------------------
--create                    c                 Creates an archive
--concatenate               A                 Appends tar files to an archive
--append                    r                 Appends non-tar files to an archive
--update                    u                 Appends files that are newer than those in an archive
--diff or --compare         d                 Compares an archive to files on disk
--list                      t                 Lists an archive's contents
--extract or --get          x                 Extracts files from an archive
---------------------------------------------------------------------------------------------------

Qualifier                 Abbreviation                Description
---------------------------------------------------------------------------------------------------
--directory dir               C           Changes to directory 'dir' before performing operations  
--file [host:]file            f           Uses the file called 'file' on the computer called 'host' as the archive file
--listed-incremental file     g           Performs an incremental backup or restore, using 'file' as a list of previously archived file
--multi-volume                M           Creates or extracts a multi-volume archive
--preserve-permissions        p           Preserves all protection information
--absolute-paths              P           Retains the leading / on filenames
--verbose                     v           Lists all files read or extracted; when used with --list, displays file sizes, ownerships, and time stamps
--verify                      W           Verifies the archive after writing it
--gzip or --ungzip            z           Compresses an archive with gzip
--bzip2                       j           compresses an archive with bzip2
--xz                          J           Compresses an archive with xz
---------------------------------------------------------------------------------------------------

      tar -xvzf
f: this must be the last flag of the command, and the tar file must be immediately after. It tells tar the name and path of the compressed file.
z: tells tar to decompress the archive using gzip
x: tar can collect files or extract them. x does the latter.
v: makes tar talk a lot. Verbose output shows you all the files being extracted.

Three compression tools:  (oldest to newest)
-gzip   extension: .gz  .tgz
-bzip2  extension: .bz2 .tbz
-xz     extension: .xz 



    
    
              
                                cpio 
cpio utility has three operation mode:
  -Copy-Out Mode: -o or --create 
    to create an archive and copies files into it.
  -Copy-In Mode: -i or --extract
    extracts data from an existing archive
  -Copy-Pass Mode: -p or --pass-through
    It combines the copy-out and copy-in modes, enable you to copy a directory tree from one location to another.
    
To create an archive, you combine the --create (or -o) option with one or more of the option. 
To restore data, you do te same, but you use --extract (or -i)

Option                    Abbreviation        Description
---------------------------------------------------------------------------------------------------------------------
--reset-access-time         -a              -Resets the access time after reading a file so that it doesn't appear to have been read.
---------------------------------------------------------------------------------------------------------------------
--append                    -A              -Appends data to an existing archive.
---------------------------------------------------------------------------------------------------------------------
--pattern-file=filename     -E filename     -Uses the contents of [filename] as a list of files to be extracted in copy-in mode.
---------------------------------------------------------------------------------------------------------------------
--file=filename             -F filename     -Uses [filename] as the 'cpio' archive file; if this parameter is omitted, 'cpio' uses 
                                            standard input or output.
---------------------------------------------------------------------------------------------------------------------                                     
--format=format             -H format       -Uses a specified format for the archive file. Common values for [format] include 'bin'
                                            (a newer binary format with a checksum), and 'tar' (the format used by 'tar')
---------------------------------------------------------------------------------------------------------------------                                     
N/A                         -I filename     -Uses the filename specified by [filename] instead of standard input.
                                            (Unlike -F, this option does not redirect output data.)
---------------------------------------------------------------------------------------------------------------------                                            
--no-absolute-file-names    -N/A            -In copy-in mode, extracts files relative to the current directory, even if filenames
                                            in the archive contain full directory paths.
---------------------------------------------------------------------------------------------------------------------
N/A                         -O filename     -Uses the filename specified by [filename] instead of standard output.
                                            (Unlike -F, this option does not redirect input data.)
---------------------------------------------------------------------------------------------------------------------
--list                      -t              -Displays a table of contents for the input.
---------------------------------------------------------------------------------------------------------------------
--unconditional             -u              -Replaces all files without first asking for verification.
---------------------------------------------------------------------------------------------------------------------
--verbose                   -v              -Displays filenames as they're added to or extracted from the archive.
                                            When used with -t, displays additional listing information (similar to ls -l)
---------------------------------------------------------------------------------------------------------------------

To use 'cpio' to archive a directory, you must pass a list of files to the utility using standard input. 
You can do this by piping the STDOUT of the 'find' utility.
example:
  find ./home/voth | cpio -o > /mnt/usb/mywork.cpio
The example above is uncompressed; to compress you must include a compression utility:
  find ./home/voth | cpio -o > /mnt/usb/mywork.cpio.gz

Extracting data from a 'cpio' archive entails using the -i option, but no pipe is required.
  gunzip /mnt/usb/mywork.cpio.gz    *to unzip/uncompress*
  cpio -i < /mnt/usb/mywork.cpio    *to extract the data*
          or
You can uncompress your compressed cpio archive and extract the data in one step by using -c option with gunzip 
and passing its output to cpio in a pipe:          
  gunzip -c /mnt/usb/mywork.cpio.gz | cpio -i
  





                        dd utility
The 'dd' utility is a low-level copying program. When you give it a partiton device file as input, it copies that partition's contens
to the output file you specify.
The input and output file are passed with the:
  input: if=file
  output: of=file
example:
  dd if=/dev/sda3 of=/dev/dvd
This example backs up the /dev/sda3 disk partition to /dev/dvd media.

The 'dd' utility can be a way to create extract backups of entire partitions. However, as a general backup tool, it has serious problems.
It backs up the entire partition, including any empty space. Finally, you can't easily restore data to a partition that's smaller than
the original partition, and when restoring to a larger partition, you'll end up wasting some of the space available on that partition.
example:
  dd if=/dev/dvd of=/dev/sda3
This example restore the backup from the dvd content to /dev/sda3 partition

You can also use 'dd' in some other capacities. For instance, if you need an empty file of a particular size, you can copy from the 
/dev/zero device to a target file.
example:
  dd if=/dev/zero of=[device|file] bs=1024 count=720
The bs=size and count=length options are needed to set the block size and length of the file.
1024 x 720 bytes empty file = 737,280 bytes = 737kb

                        
                        
