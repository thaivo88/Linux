######### Active Directory: Managing User Account ########

## Partner Lab Environment System: ##
# hpcgate     SLURM for HPC Partner Lab  UNIX
# plabgate1   Partner Lab gateserver     WIN

### HPC Lab Environment System ###
# hpchou-login      login server/PBS    UNIX
# hpchost1          NIS                 UNIX
# hpchost2          hpchost1 backup     UNIX
# hpchost3          NFS mount           UNIX
# hpchost4          NFS mount           UNIX
# hpcg3       Accelerators gateserver    WIN
# hpcg4       Cluster Test gateserver    WIN
# hpcg5       Fabrics, CLuster Stack & Setuip Tools gateserver   WIN
# hpcg6       Benchmarkers, CMU sinssand Other gateserver        WIN

# mops; HPCDAdmin email address == System Admin
# When someone request an account for any environment above, an email will be sent to mops when they fill out the request form.
# In that request email a command will be posted, copy and paste into that given Unix environment

#########################################

# Nov 2019 Update, NIS mapping issue. Master hpchost1; slaves hpchost3-4
# When creating an account use hpchost1 /admin/cronjobs/BuildAccounts
# Then go to hpchost3/4 to create their directory in usr[1-6]
     mkdir /usr[1-6]/[username]
# change permission
     chown [username]:users /usr[1-6]/[uesrname]
# copy over the directory templet files to their new directory from /etc/skel
      cp -a /etc/skel/. /[user_home_directory]
# head back to hpchost1 and change the user's home directory      
     usermod -d [home_directory] -m [username]

##################################################
# Command structure:
# /admin/cronjobs/BuildAccount -a [yes/no] -e [email] -n [environment] -i [employee ID] -l "[location]" -r "[name]" -R "[requestor]" -m "[manager]" -t [employee type] -u [username] 
# option def:
     d) set
     D) debug
     a) agree
     e) email
     h) Usage
     i) id
     l) location
     m) manager
     n) node environment: hpcg3-6 | hpchost1 | hpcgate
     r) realname
     R) requestor
     t) employee type: contractor contingency | employee | external
     u) username
# Scripts directory to manage users: /admin/cronjobs/

##########################################################################

# To check Expire Remaining days to all users
     > cd /admin/crontjobs/
     > ./printuserdays
###### Example output: #####
#USER: voth           EXPIRE: 180  REMAINING: 115
#USER: thvo           EXPIRE: 180  REMAINING: -115
#User thvo has been unactive for 115 days since their password expire, email user before deleting user. (sometime the system doesn't update the Remaining day)

# To search a user username or if they have an account
     > ypcat passwd | grep [username|name]
     > cat /etc/passwd | grep [username|name]
# Example
     > ypcat passwd | grep voth
##### Output: #####
     > voth:SIS.5HAX3Q.pU:30501:100:Thai Vo, HOUSTON:/usr6/voth:/bin/bash


#when creating an account for Plab search group to find the GID or default to Guest 10400 or 10300 for HPCD
     cat /etc/group | grep [group]
     /etc/gshadow
#to find user email address or name
     cat /etc/aliases | grep -i [username] 
    /etc/netgroup

#both rsa key should look the same
(ypcat passwd | grep $USER) = (getent shadow $USER)


##################################################
Output for /etc/shadow:
voth:$6$5lvfWcSW$BI5L9konFqcIRukmIsJ6X5uYY7pjXXdclx9.:17778:0:180:14:14::

:::::::: == [USERNAME]:[ENCRYPTION_TYPE][PASSWORD]:[LASTCHANGED]:[MIN]:[MAX]:[WARNING]:[INACTIVE]:[EXPIRE]:
Encryption type:
  $1$ is MD5
  $2a$ is Blowfish
  $2y$ is Blowfish
  $5$ is SHA-256
  $6$ is SHA-512
LASTCHANGED - Last password change: Days since Jan 1, 1970 that password was last changed
MIN: The minimum number of days required between password changes i.e. the number of days left before the user is allowed to change his/her password
MAX: The maximum number of days the password is valid (after that user is forced to change his/her password)
WARNING: The number of days before password is to expire that user is warned that his/her password must be changed
INACTIVE: The number of days after password expires that account is disabled
EXPIRE: days since Jan 1, 1970 that account is disabled i.e. an absolute date specifying when the login may no longer be used.


Both "!" and "!!" being present in the password field mean an account is locked.
"!!" in an account entry in shadow means the account of an user has been created, but not yet given a password. 
Until being given an initial password by a sysadmin, it is locked by default.
voth:!!$6$5lvfWcSW$BI5L9konFqcIRukmIsJ6X5uYY7pjXXdclx9.:17778:0:180:14:14::
#############################################

To change user password expiry information use the chage command on Linux as follows:

chage [username]
chage [options] [username]
chage -l voth
chage [username] -d [date]

Options:
  -d, --lastday LAST_DAY        set date of last password change to LAST_DAY
  -E, --expiredate EXPIRE_DATE  set account expiration date to EXPIRE_DATE
  -h, --help                    display this help message and exit
  -I, --inactive INACTIVE       set password inactive after expiration
                                to INACTIVE
  -l, --list                    show account aging information
  -m, --mindays MIN_DAYS        set minimum number of days before password
                                change to MIN_DAYS
  -M, --maxdays MAX_DAYS        set maximim number of days before password
                                change to MAX_DAYS
  -R, --root CHROOT_DIR         directory to chroot into
  -W, --warndays WARN_DAYS      set expiration warning days to WARN_DAYS
  
############################################
passwd [OPTION] [USER]

-a, --all	When used with -S (see below), this option will show the password status for all users. 
     This option will not work if used without -S.
-d, --delete	Delete a user's password (make it empty). This option is a quick way to disable logins for an account, 
     without disabling the account itself.
-e, --expire	Immediately expire an account's password. This forces a user to change their password the next time they log in.
-h, --help	Display information about how to use the passwd command.
-i, --inactive INACTIVE	This option is used to disable an account after the password has been expired for a number of days. 
     After a user account has had an expired password for integer INACTIVE days, the user may no longer sign on to the account.
-k, --keep-tokens	Keep password tokens. Indicates that this user's password should only be changed if it has expired.
-l, --lock	Lock the password of the named account. This option disables a password by changing it to a value which matches no 
     possible encrypted value. It does this by adding a character at the beginning of the encrypted password.

     Note that this does not disable the account. The user may still be able to log in using another authentication method 
     (an SSH key, for example). To disable the account, the superuser can use the usermod command with the option --expiredate 1. 
     This option will set the account's expiration date to a date in the past â€” namely Jan 2, 1970.

     Users with a locked password are not allowed to change their password.

-n, --mindays MIN_DAYS	Set the minimum number of days between password changes to MIN_DAYS. 
     A value of zero for this field indicates that the user may change his/her password at any time.
-q, --quiet	Quiet mode; passwd will operate without displaying any output.
-R, --root CHROOT_DIR	For advanced users: this option will apply changes in the chroot directory CHROOT_DIR and use the 
     configuration files from the CHROOT_DIR directory.
-S, --status	Display account status information. The status information consists of 7 fields:

     The user's login name
     password usability: L if the account has a locked password, 
                         NP if the account has no password, or 
                         P if the account has a usable password
     date of the last password change
     minimum password age
     maximum password age
     password warning period
     password inactivity period

     In fields 4 through 7, password ages are expressed in days.

     Specifying -a in addition to -S displays password status for all users.
     
-u, --unlock	Unlock the password of the named account. This option re-enables a password by changing the password back to its 
     value before the -l option was used to lock it.
-w, --warndays WARN_DAYS	Set the number of days of warning before a password change is required. WARN_DAYS is the number of days 
     prior to the password expiring that a user will be warned that their password is about to expire.
-x, --maxdays MAX_DAYS	Set the maximum number of days a password remains valid. After MAX_DAYS, the password must be changed.

############################################
Verify integrity of password files
Use the pwck command verifies the integrity of the users and authentication information. 
It checks that all entries in /etc/passwd and /etc/shadow have the proper format and contain valid data. 
The user is prompted to delete entries that are improperly formatted or which have other uncorrectable errors. 
The syntax is:

pwck -r /etc/passwd
pwck -r /etc/shadow
pwck [options] /etc/shadow

Options:
  -h, --help                    display this help message and exit
  -q, --quiet                   report errors only
  -r, --read-only               display errors and warnings
                                but do not change files
  -R, --root CHROOT_DIR         directory to chroot into
  -s, --sort                    sort entries by UID
  
##############################################

# searches the log directory for instent of passwd for the given username to see any update
     grep -R -i passwd /var/log/* | grep [username]
