# run on compute node to provide infor about CPU, SocketsPerBoard, CoresPerSockets, ThreadsPerCore, RealMemory
slurmd -C


##################################

ubuntu 20.04 using lustre master
https://wiki.whamcloud.com/display/PUB/Build+Lustre+MASTER+with+Ldiskfs+on+Ubuntu+20.04.1+from+Git


(base) root@znode45:/etc/netplan# lctl ping 192.168.0.210@o2ib
12345-0@lo
12345-192.168.0.210@o2ib


####################################
Install MOFED and make sure there's an IP address set on the ib* interface
Make sure you can ping another server over IB

That version will work until we find a kernel that it no longer works for.
  /root/lustre-2.12.4.tar.gz

copy file over to node
  scp /root/lustre-2.12.4.tar.gz \root@[hostname]:/
for rpm distro only:
  scp /home/hpcd/letsche/libyaml-devel-0.1.4-11.el7_0.x86_64.rpm \root@[hostname]:/ 
  rpm -i libyaml-devel-0.1.4-11.el7_0.x86_64.rpm
  
create directory for lustre
  mkdir -p /lustre/ssd /lustre/nvme /lustre/hdd
  
Unpack
  tar zxvf lustre-2.12.4.tar.gz

install depend
  apt install module-assistant libreadline-dev libyaml-dev libselinux-dev libsnmp-dev mpi-default-dev libssl-dev

To build it, unpack it and do 
  ./configure --disable-server --enable-client
if it fail on the next step just run
  ./configure
  
then add the debian packages in a "debs" directory. or for rpm
  make debs
  make rpms
  
install them with 
  dpkg -i lustre-client-modules-4.15.0-91-generic_2.12.4-1_amd64.deb lustre-client-utils_2.12.4-1_amd64.deb lustre-dev_2.12.4-1_amd64.deb lustre-iokit_2.12.4-1_amd64.deb

Create a file named /etc/modprobe.d/lustre.conf that contains
  vi /etc/modprobe.d/lustre.conf
    options lnet networks=o2ib(ib0)
    
then 
  modprobe lustre
  
add entries to /etc/fstab (get them from another server).
  # Lustre
  #
  192.168.0.210@o2ib:/ssd         /lustre/ssd     lustre  rw,flock,retry=10000    0 0
  192.168.0.210@o2ib:/nvme        /lustre/nvme    lustre  rw,flock,retry=10000    0 0
  192.168.0.210@o2ib:/hdd         /lustre/hdd     lustre  rw,flock,retry=10000    0 0

edit lnet.service file and add the below to the top of the ExecStart list
  vi /lib/systemd/system/lnet.service 
    ExecStart=/sbin/modprobe lustre
  systemctl enable lnet
  
in order to load the lustre modules on boot.  I'm not sure why I needed to do that on some systems and not others.
  depmod -a
  reboot
Make sure all three lustre file systems mount on boot.


########## lustre 2.12.7 #############
mkdir lustre-2.12.7
cd lustre-2.12.7

wget https://downloads.whamcloud.com/public/lustre/lustre-2.12.7/el8/client/RPMS/x86_64/kmod-lustre-client-2.12.7-1.el8.x86_64.rpm
wget https://downloads.whamcloud.com/public/lustre/lustre-2.12.7/el8/client/RPMS/x86_64/lustre-client-2.12.7-1.el8.x86_64.rpm
wget https://vault.centos.org/centos/8/PowerTools/x86_64/os/Packages/libyaml-devel-0.1.7-5.el8.x86_64.rpm
wget https://vault.centos.org/centos/8/BaseOS/x86_64/os/Packages/libyaml-0.1.7-5.el8.x86_64.rpm
wget https://downloads.whamcloud.com/public/lustre/lustre-2.12.7/el8/client/SRPMS/lustre-2.12.7-1.src.rpm
wget http://mirror.centos.org/centos/8-stream/BaseOS/x86_64/os/Packages/libselinux-devel-2.9-5.el8.x86_64.rpm
wget http://mirror.centos.org/centos/8-stream/AppStream/x86_64/os/Packages/kernel-rpm-macros-125-1.el8.noarch.rpm
wget http://mirror.centos.org/centos/8-stream/BaseOS/x86_64/os/Packages/libselinux-2.9-5.el8.x86_64.rpm
wget http://mirror.centos.org/centos/8-stream/BaseOS/x86_64/os/Packages/libsepol-2.9-2.el8.x86_64.rpm
wget https://download-ib01.fedoraproject.org/pub/epel/8/Everything/aarch64/Packages/p/perl-ExtUtils-PkgConfig-1.16-10.el8.noarch.rpm

dnf install elfutils-libelf-devel
yum install libsepol.i686
yum install libsepol-devel.x86_64
rpm -ivh libsepol-2.9-2.el8.x86_64.rpm
rpm -ivh libyaml-*
rpm -ivh perl-ExtUtils-PkgConfig-1.16-10.el8.noarch.rpm
rpm2cpio lustre-2.12.7-1.src.rpm | cpio -ivd
tar zxvf lustre-2.12.7.tar.gz
cd lustre-2.12.7/
./configure --disable-server
cd ..
# kernel-rpm-macros-125-1 failes to install until ./configure --disable-server is ran but is needed when running make rpms
rpm -ivh kernel-rpm-macros-125-1.el8.noarch.rpm
rpm -ivh libselinux-2.9-5.el8.x86_64.rpm
yum install libselinux-devel.x86_64
yum install kernel-abi-whitelists.noarch
cd lustre-2.12.7
make rpms
rpm -Uvh kmod-lustre-client-2.12.7-1.el8.x86_64.rpm lustre-client-2.12.7-1.el8.x86_64.rpm
#(make sure the IB interface is configured first)
mkdir -p /lus/aiholus1
echo 10.10.100.4@o2ib:10.10.100.5@o2ib:/aiholus1 /lus/aiholus1 lustre rw,flock,lazystatfs 0 0 >> /etc/fstab
echo "options lnet networks=o2ib(ib0)" > /etc/modprobe.d/lustre.conf
echo "ExecStart=/sbin/modprobe lustre" >> /lib/systemd/system/lnet.service
systemctl enable lnet
systemctl start lnet
lustre_rmmod; depmod -a
modprobe lustre
mount -a
#########################################
















#########################################
https://wiki.whamcloud.com/display/PUB/Build+Lustre+MASTER+client+on+Debian+10.1.0+from+Git



Installing the build dependency packages
apt install -y build-dep linux-headers-$(uname -r)

apt install -y libtool libyaml-dev ed libreadline-dev dpatch libsnmp-dev mpi-default-dev libselinux-dev libncurses5-dev libncurses-dev

apt install -y bison flex gnupg libelf-dev gcc libssl-dev bc wget bzip2 build-essential udev kmod cpio module-assistant

apt install -y libkeyutils* libnl-genl-3* mpi-default-bin

List all kernel version directory and list the location of each kernel version
dpkg -S compiler-gcc.h kconfig.h

ls -l /usr/src/

Download lustre sources from whamcloud git repo
mkdir /root/lustre-whamcloud

cd /root/lustre-whamcloud

git clone git://git.whamcloud.com/fs/lustre-release.git

cd lustre-release

Building Lustre Client Packages
replace [kernel-version] with the current kernel version by using uname -r
sh autogen.sh && ./configure --disable-server --with-linux=/usr/src/linux-headers-$(uname -r) && make debs -j $(nproc)

If above failed for make use the blow:
make dkms-debs -j $(nproc)

Installing Lustre Clients
cd debs

dpkg -i *.deb

Loading module and daemon
systemctl stop lnet
lustre_rmmod; depmod -a
modprobe lustre
systemctl enable lnet
systemctl start lnet
mount -a
